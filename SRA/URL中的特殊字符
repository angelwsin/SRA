URL特殊字符需转义

1、空格换成加号(+)
2、正斜杠(/)分隔目录和子目录
3、问号(?)分隔URL和查询
4、百分号(%)制定特殊字符
5、#号指定书签
6、&号分隔参数

转义字符的原因：

如果你的表单使用get方法提交，并且提交的参数中有“&”等特殊符的话，如果不做处理，在service端就会将&后面的作为另外一个参数来看待。例如
表单的action为list.jsf?act=go&state=5
则提交时通过request.getParameter可以分别取得act和state的值。
如果你的本意是act='go&state=5'这个字符串，那么为了在服务端拿到act的准确值，你必须对&进行转义

url转义字符原理：

将这些特殊的字符转换成ASCII码，格式为：%加字符的ASCII码，即一个百分号%，后面跟对应字符的ASCII（16进制）码值。例如 空格的编码值是"%20"。

URL特殊符号及对应的十六进制值编码：

1. +  URL 中+号表示空格 %2B
2. 空格 URL中的空格可以用+号或者编码 %20
3. /  分隔目录和子目录 %2F 
4. ?  分隔实际的 URL 和参数 %3F 
5. % 指定特殊字符 %25 
6. # 表示书签 %23 
7. & URL 中指定的参数间的分隔符 %26 
8. = URL 中指定参数的值 %3D 

解决：以 URL 传+号到后台变空格问题解决方案 为例
 方法一、修改客户端，将客户端带“+”的参数中的“+”全部替换为‍“2B%”，这样参数传到服务器端时就能得到“+”了。

方法二、修改服务器端，将空格替换为“+”，这种方式只适用于参数中有‍“+”没有空格的情况。

例子：

String a = reuqest.‍getParameter("clientStr")‍.replace(' ','+');

如果客户端为clientStr=test+OK，那么a的值为test+OK;

方法三、修改服务器端，将获取参数的方法由‍reuqest.‍getParameter改为‍request.getQueryString().substring(0)，然后对得到的字符串进行解析。

例子：

‍‍String a =request.getQueryString().substring(0);

‍如果客户端为clientStr=test+OK，那么a的值为‍clientStr=test+OK，需要再解析一下，

a=a.‍substring(10);得到a的值为‍test+OK。

附：一个JS，用来转义URL中特殊字符的。

‍function URLencode(sStr)
{
    return escape(sStr).replace(/\+/g, '+').replace(/\"/g,'"').replace(/\'/g, ''').replace(/\//g,'/');
}

 

还一种方案

strURL = "search.do?param=" + encodeURIComponent(str);


普通的传参出现乱码问题，可使用encodeURI来转译，它会转译成UTF-8的格式;
strURL = "search.do?param=" + encodeURI(str);
